---

name: 'Workflow'

on:
  workflow_dispatch:
    inputs:
      runDev:
        description: 'Run Dev'
        required: true
        type: boolean
        default: true
      inOrder:
        description: 'Run in order'
        required: true
        type: boolean
        default: true

permissions:
  contents: read

jobs:

  first_job:
    name: First Job
    runs-on: ubuntu-latest
    outputs:
      matrix_order: ${{ steps.set_matrix.outputs.matrix }}
      strategy: ${{ steps.set_matrix.outputs.strategy }}
    defaults:
      run:
        shell: bash

    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Create matrix order
      id: set_matrix
      run: |

        # # you could just manually set just the matrix values
        # if [[ "${{ github.event.inputs.runDev }}" == "true" ]]
        # then
        #   matrix='{"stage": ["dev","tst"]}'
        # else
        #   matrix='{"stage": ["tst"]}'
        # fi
        # jq <<< "$matrix"
        # echo "matrix=$matrix" >> "$GITHUB_OUTPUT"

        # or compile the whole strategy
        if [[ "${{ github.event.inputs.runDev }}" == "true" ]]
        then
          strategy='{matrix":{"stage": ["dev","tst"]}'
        else
          strategy='{matrix":{"stage": ["tst"]}'
        fi

        if [[ "${{ github.event.inputs.inOrder }}" == "true" ]]
        then
          strategy="${strategy},"fail-fast":true,"max-parallel":1}'"
        else
          strategy="${strategy},"fail-fast":false,"max-parallel":2}'"
        fi

        echo "strategy=$strategy"
        echo "strategy=$strategy" >> "$GITHUB_OUTPUT"


  second_job:
    name: 'Second Job'
    runs-on: ubuntu-latest
    needs: first_job
    # use the entire constructed strategy
    strategy: ${{fromJson(needs.first_job.outputs.strategy)}}
    # strategy: ${{fromJson('{"matrix":{"stage":["dev","tst"]},"fail-fast":true,"max-parallel":1}')}}
    # or just using the dynamic "matrix" ouput and hardcoding fail-fast and max-parallel
    # strategy:
    #   matrix: ${{fromJson(needs.first_job.outputs.matrix_order)}}
    #   fail-fast: true
    #   max-parallel: 1
    defaults:
      run:
        shell: bash

    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Started
      run: |
        date


    - name: Check output
      run: |
        echo "OUTPUT: $OUTPUT"
      env:
        OUTPUT: ${{needs.first_job.outputs.matrix_order}}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Version
      run: terraform --version

    - name: Terraform fmt
      run: |
        terraform -chdir=$GITHUB_WORKSPACE/terraform/${{ matrix.stage }} fmt -check -recursive -diff

    - name: Ended
      run: |
        date
